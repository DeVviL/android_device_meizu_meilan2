To work Selinux in Enforcing mode, you need to modified system sepolicy:
!-For auto modify use 'sepolicy-modify-rules.patch' in 'patches' folder-!

============================================

/system/sepolicy/domain.te:

============================================

1) in rule

neverallow { domain -init -system_server -dumpstate userdebug_or_eng(`-qti_debugfs_domain')} debugfs:file no_rw_file_perms;

add exception '-surfaceflinger -audioserver -zygote -bootanim -cameraserver -dex2oat -untrusted_app -mediacodec -mediaserver' to succeed

neverallow { domain -surfaceflinger -audioserver -zygote -bootanim -cameraserver -dex2oat -untrusted_app -mediacodec -mediaserver -init -system_server -dumpstate userdebug_or_eng(`-qti_debugfs_domain')} debugfs:file no_rw_file_perms;

----------

2) in rule

neverallow {
  domain
  -system_server
  -system_app
  -init
  -installd # for relabelfrom and unlink, check for this in explicit neverallow
} system_data_file:file no_w_file_perms;

add exception '-nvram_daemon -thermal_manager' to succeed

neverallow {
  domain
  -nvram_daemon
  -thermal_manager
  -system_server
  -system_app
  -init
  -installd # for relabelfrom and unlink, check for this in explicit neverallow
} system_data_file:file no_w_file_perms;

----------

3) in rule

neverallow { domain -init -ueventd } device:chr_file { open read write };

add exception '-cameraserver' to succeed

neverallow { domain -cameraserver -init -ueventd } device:chr_file { open read write };

============================================

/system/sepolicy/netd.te:

============================================

1) in rules

neverallow { domain -system_server -dumpstate } netd_service:service_manager find;
neverallow { domain -system_server -dumpstate } netd:binder call;

add exception '-sysinit' to succeed

neverallow { domain -sysinit -system_server -dumpstate } netd_service:service_manager find;
neverallow { domain -sysinit -system_server -dumpstate } netd:binder call;

============================================
